@use 'sass:map';
@use '@angular/material' as mat;

@mixin css($theme) {
  // Get the color config from the theme.
  $color-config: mat.m2-get-color-config($theme);
  // Get the primary color palette from the color-config.
  $primary-palette: map.get($color-config, 'primary');
  $accent-palette: map.get($color-config, 'accent');
  $typography-config: mat.m2-get-typography-config($theme);
  $background: map.get($theme, background);
  $foreground: map.get($theme, foreground);

  .pmksImage {
    transform: scale(0.8);
    position: relative;
    width: 65px;
    height: 40px;
    flex-shrink: 0;
  }

  .toolbar.toolbar {
    background-color: mat.m2-get-color-from-palette($primary-palette, 100);
    position: absolute;
    top: 0px;
    left: 0px;
    height: 30px;
    padding: 5px;
    box-shadow: 0 3px 1px -2px #0003, 0 2px 2px #00000024, 0 1px 5px #0000003f;
    min-width: 300px;
    margin-bottom: 10px;
    display: flex;
    align-items: center;
    overflow: hidden;
  }

.toolbar-scroll-container {
  display: flex;
  overflow: hidden;
  flex: 1; 
  min-width: 0;
  position: relative;
}

  .toolbar-buttons-wrapper {
    display: flex;
    transition: transform 0.3s ease-in-out;
    white-space: nowrap;
  }

  .toolbar-button.toolbar-button {
    background-color: mat.m2-get-color-from-palette($primary-palette, 100);
    margin: 0rem 0.2rem;
    height: 30px;
    flex-shrink: 0; // Prevent buttons from shrinking
    transition: all 0.3s ease;
  }

  .toolbar-button:hover {
    background-color: mat.m2-get-color-from-palette($primary-palette, 50);
    transition-duration: 0.3s;
  }

    
.toolbar-button.arrow {
  background-color: mat.m2-get-color-from-palette($primary-palette, 100);
  color: mat.m2-get-color-from-palette($primary-palette, 700);
  margin: 0 0.1rem;
  height: 30px;
  width: 28px;
  min-width: 28px;
  padding: 0 !important;
  border-radius: 4px;
  display: flex; // Let Angular override this when [style.display] is used
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  overflow: visible;
  z-index: 100;
  position: relative;
  transition: background-color 0.3s ease;
  box-shadow: none;

  &:hover {
    background-color: mat.m2-get-color-from-palette($primary-palette, 50);
  }

  mat-icon {
    font-size: 20px !important;
    height: 20px !important;
    width: 20px !important;
    line-height: 1 !important;
    display: inline-block;
    visibility: visible;
    opacity: 1;
    z-index: 200;
    position: relative;
    color: inherit;
    transform: translateX(5px); //not sure why this is needed but it works.
  }
}

.spacer {
  flex: 1 1;
}

  // Responsive behavior
  @media (max-width: 768px) {
    .toolbar-scroll-container {
      max-width: calc(100% - 250px);
    }
  }

  @media (max-width: 600px) {
    .toolbar.toolbar {
      min-width: 100%;
    }
    
    .toolbar-scroll-container {
      max-width: calc(100% - 180px);
    }

    .toolbar-button.toolbar-button {
      margin: 0rem 0.1rem;
    }
  }
}